#!/usr/bin/env ruby
# frozen_string_literal: true

# This script is meant to politely search the DCJ PPO lookup for all offenders
# in our current CRIMES dump, so that we can verify how many of them actually
# show up.
#
# It attempts to throttle queries over 12 hours, so that we don't overwhelm the
# PPO lookup API.
require 'csv'
require_relative '../config/environment.rb'
$stdout.sync = true

def strip_leading_zero(num)
  num.to_i.to_s
end

class Throttler
  EXPECTED_NUM_QUERIES = 3610
  EXPECTED_DURATION_HOURS = 12
  EXPECTED_SECONDS_PER_QUERY = (EXPECTED_DURATION_HOURS * 60 * 60) / EXPECTED_NUM_QUERIES

  def throttle
    start = Time.now
    result = yield
    duration = Time.now - start
    sleep([5, EXPECTED_SECONDS_PER_QUERY - duration].max) unless ENV['NO_THROTTLE']
    result
  end
end

dcj_client = DcjClient.new
results = <<-CMD
  echo "copy (select def_id_nbr, case_id_nbr, def_lname, oregon_sid_nbr
  from defendants where oregon_sid_nbr is not null and def_lname is not null)
  to STDOUT CSV HEADER;" | psql crimes
CMD
throttler = Throttler.new
out = CSV.new($stdout, headers: %i[
  def_id_nbr
  case_id_nbr
  dcj_result
  doc_result
], write_headers: true)

CSV.parse(results, headers: :first_row) do |row|
  num_retries = 0
  begin
    dcj_result = nil
    doc_result = nil
    sid = strip_leading_zero(row['oregon_sid_nbr'])

    throttler.throttle do
      dcj_result = dcj_client.search_for_offender(
        last_name: row['def_lname'],
        sid: sid,
      )

      doc_result = OffenderScraper.fetch_offender_details(sid)
    end

    out << {
      def_id_nbr: row['def_id_nbr'],
      case_id_nbr: row['case_id_nbr'],
      dcj_result: JSON.generate(dcj_result),
      doc_result: JSON.generate(doc_result),
    }
    num_retries = 0
  rescue => ex
    $stderr.puts "Got exception: #{ex.message}"
    $stderr.puts '  ...retrying'
    num_retries += 1
    retry if num_retries < 3
  end
end
